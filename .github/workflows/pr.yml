name: Pull Request

on:
  pull_request:
    branches: [ main ]

# Cancel in-progress runs when a new run is triggered
concurrency:
  group: pr-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  # Quick tests for PRs - run in parallel
  test-pr:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        task: [unit-min, unit-max, types, lint]
        include:
          - task: unit-min
            python-version: '3.9'
            name: 'Unit Tests (Python 3.9)'
            cmd: 'uv run pytest tests/ -v'
          - task: unit-max
            python-version: '3.12'
            name: 'Unit Tests (Python 3.12)'
            cmd: 'uv run pytest tests/ -v --cov=til --cov-report=xml'
          - task: types
            python-version: '3.12'
            name: 'Type Checks'
            cmd: 'uv run mypy til/'
          - task: lint
            python-version: '3.12'
            name: 'Linting'
            cmd: 'uv run ruff format --check til/ tests/ && uv run ruff check til/ tests/'
    
    name: ${{ matrix.name }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        github-token: ${{ github.token }}
        cache-prefix: "pr-${{ matrix.task }}"
    
    - name: Install dependencies
      run: |
        uv venv
        uv sync --extra dev
    
    - name: Run ${{ matrix.name }}
      run: ${{ matrix.cmd }}
    
    - name: Upload coverage
      if: matrix.task == 'unit-max'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: pr-py${{ matrix.python-version }}
        fail_ci_if_error: false

  # Summary check
  pr-check:
    if: always()
    needs: test-pr
    runs-on: ubuntu-latest
    
    steps:
    - name: PR checks summary
      run: |
        echo "PR test results:"
        echo "Status: ${{ needs.test-pr.result }}"
        if [ "${{ needs.test-pr.result }}" == "success" ]; then
          echo "✅ All PR checks passed!"
        else
          echo "❌ Some PR checks failed"
          exit 1
        fi